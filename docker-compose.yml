version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    env_file:
      - ./docker/backend/.env
    depends_on:
      - pgvector
      - redis
      - mlflow
    networks:
      - network
    volumes:
      - ./app:/backend/app
      - ./ml-models:/backend/ml-models
      - ./integrated_datasets:/backend/integrated_datasets
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    restart: unless-stopped

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "8501:8501"
    env_file:
      - ./docker/frontend/.env
    depends_on:
      - backend
    networks:
      - network
    restart: unless-stopped

  pgvector:
    image: ankane/pgvector:latest
    container_name: postgres 
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - apa-db:/var/lib/postgresql/data
    networks:
      - network
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - network
    restart: unless-stopped

  mlflow:
    build:
      context: .
      dockerfile: docker/mlflow/Dockerfile
    container_name: mlflow
    command: |
      mlflow ui
      --backend-store-uri ${MLFLOW_BACKEND_STORE_URI}
      --default-artifact-root ${MLFLOW_ARTIFACT_URI}
      --registry-store-uri ${MLFLOW_REGISTRY_STORE_URI}
      --host 0.0.0.0    
    ports:
      - "5000:5000"
    networks:
      - network
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${HOME}/minio/data:/data
    user: "${UID}:${GID}"
    networks:
      - network
    restart: unless-stopped

volumes:
  apa-db:
    external: true
    name: apa-db
  minio_data:

networks:
  network:
    driver: bridge
